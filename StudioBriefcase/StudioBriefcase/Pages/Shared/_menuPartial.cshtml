@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@using StudioBriefcase.Models;
@{

}

<ul class="box-col box-center3 menu-style p3">
    <li class="box-row box-center3 w100">
        <span class="text-sm" style="color:inherit">Color Mode</span>
        <button class="menu-btn menu-btn-size c-fg" onclick="toggleColorScheme(this)" id="color_mode_toggle" data-target="colorscheme">Light</button>
    </li>

    @if (User.Identity?.IsAuthenticated == true)
    {

        <li class="box-col box-center3 w100">
            @* button class="menu-btn menu-btn-link c-fg" onclick="OpenSettingsPage()"><span class="text-sm" style="color:inherit">Settings</span></button> *@
            <button class="menu-btn menu-btn-link event-toggle c-fg" data-target="user-form"><span class="text-sm" style="color:inherit">Settings</span></button>
        </li>

        <li class="box-col box-center0 w100">
            <span class="text-sm" style="color:inherit">@User.FindFirst("role")?.Value</span>
            <span class="text-sm" style="color:inherit">@User.FindFirst("name")?.Value</span>
            <a class="menu-btn menu-btn-link text-center w100 c-fg" href="/logout">Logout</a>
        </li>
    }
    else
    {
        <li class="box-col box-center0 w100">
            <span class="text-sm" style="color:inherit">GitHub OAuth</span>
            <a class="menu-btn menu-btn-link text-center w100 c-fg" href="/login">Login</a>
        </li>

    }
</ul>

@if (User.Identity?.IsAuthenticated == true)
{
    <div class="form c-bg" id="user-form">
        <div class="form-content c-fg">
            <div class="box-col">
                <span>@User.FindFirst("name")</span>
                <span>@User.FindFirst("privilege")</span>
                <a class="icon-btn" href="@User.FindFirst("webpage")?.Value" target="_blank">
                    <img class="icon-square-media" src="@User.FindFirst("picture")?.Value" alt="Github profile Pic" />
                </a>
                <span>@User.FindFirst("class")</span>
                
            </div>

            <select id="Menu_RoleDropdown">
                <option value="Private">Private</option>
                <option value="Student">Student</option>
                <option value="Teacher">Teacher</option>
                <option value="Educator">Educator</option>
                <option value="Professional">Professional</option>
                <option value="Researcher">Researcher</option>
                <option value="Content Creator">Content Creator</option>
            </select>            

            <button class="" type="button" onclick="updateUserRole(event)"><span class="text-sm" style="color:inherit">Apply</span></button>

        </div>
        <div class="form-background event-toggle" data-target="user-form"/>
    </div>
}


<script>
    function updateUserRole(event) {
        event.stopPropagation();
        
        var selectedRole = document.getElementById('Menu_RoleDropdown').value;
        var userId = '@User.FindFirst("sub")?.Value';

        fetch('/api/user/UpdateUserClass', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                Id: userId,
                userClass: selectedRole
            })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Network response was not ok");
                }
                return response.json();
            })
            .then(data => {
                console.log(data);
            })
            .catch(error => {
                console.error("Fetch Operation failed in _menuPartial.cshtml:", error);
            });
    }


</script>


