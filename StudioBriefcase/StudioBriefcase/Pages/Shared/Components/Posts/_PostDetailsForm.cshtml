@* Form that open to display the relevent mapping routes, tag handlers and post Data
Goal is to display the data about in the database and give controlls to to the user to alter the records.
Button to claim the post if its
*@
@model StudioBriefcase.Models.PostInspectModel
<div class='form expanded' id='PostDetailsForm'>
    <div class='form-content c-bg show'>
        <div class="box-row box-center3 p5">
            <span class="w75 text-sm" id="logresult-container">Success/Fail Message Appear Here</span>

@*             <div class="box-row">
                <button>Claim Post</button>
                @if (Model.gitID.ToString() == @User.FindFirst("sub")?.Value)
                {
                    //Button that gets the post GitId from database, Validate displayed Channel_ID post and video data gituser
                    <button>Sync Posts</button>
                }
            </div> *@

        </div>
        
        @* Post Data TODO, Rigth now Default Data is from Post_Type_Video Table. *@

        @if(Model.exists)
        {
            <div class="m3 p3 c-fg">
                <div class="p3">
                    @if (Model.Post.git_id == 0)
                    {
                        <span class="p3">Post is Unclaimed Post</span>
                    }
                    else
                    {
                        <span class="p3">Claimed)</span>
                    }
                </div>

                <span>TODO: Post Exists - Maybe Create add the Preview of the Post?</span>
                <div id="PostInspect-postid" data-id="@Model.Post.id">Post ID: @Model.Post.id</div>
                <div></div>
                
                @*                 <span class="text-sm">Link: @(Model.weblink)</span>
            <span class="text-sm">Channel: @(Model.channelName)</span>
            <span class="text-sm">Channel Link: @(Model.channelID)</span> *@



            </div>
            
        }
        else
        {
            <h6>Not Found in Database</h6>

        }

         @* <form method="post" action="/api/librarylink/Index"> *@
        
        <div class="box-col" id="SubmissionMap">
            
            @await Html.PartialAsync("~/Pages/Shared/Components/Library/_LibraryMapSelectors.cshtml", Model.Map)

        </div>

        <h5>Filter Parameters</h5>
        <div class="box-wraprow">
            <div class="box-col p4 show">


                <div class="box-row">
                    <label for="weblink">Link: </label>
                    <input style="width:fit-content" type="text" name="weblink" id="PostInspect-link" value="@Model.WebSite_URL" required><br>
                </div>
                <div class="box-row">
                    <label for="sectionValue">Section Value:</label>
                    <input style="width:50px;" type="number" name="sectionValue" id="PostInspect-section" value="@Model.Post.section" required>
                </div>
                <div class="bow-row">
                    <label for="PostType">Type of Post:</label>
                    <select name="Language" id="PostInspect-posttype" data-itemid="@Model.Post.post_type_id">
                        <partial name="\Components\Posts\_PostTypeOptions" />
                    </select>
                </div>
                <div class="box-row">
                    <label class="p2" for="language">Language:</label>
                    <select class="zero" name="Language" id="PostInspect-language" >
                        <option value="1">English</option>
                    </select>

                </div>

            </div>

            <div class="box-col p4 show">
                @* @await Component.InvokeAsync("LibraryTags") *@
                @await Html.PartialAsync("~/Pages/Shared/Components/Library/_LibraryPrebuiltTags.cshtml", Model.Tags)
            </div>



        </div>
@*         @if(User.Identity?.IsAuthenticated == true)
        {
            //If the post is public or the gitID is the same the user Will have access to update and delete buttons
            @if (Model.gitID == 0 || Model.gitID.ToString() == @User.FindFirst("sub")?.Value)
            { *@
                <div class="box-row">
                    <button onclick="InsertLinkToDatabase()">Insert</button>
                    <button data-postID="@Model.Post.id" onclick="DeletePost(this)">Delete</button>
                </div>
@*             }
        } *@
       
        @* </form> *@

    </div>
    <div class='form-background' onclick=ToggleExpanded('PostDetailsForm')></div>



</div>