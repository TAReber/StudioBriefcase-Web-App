@page
@model StudioBriefcase.Pages.Connect.IndexModel
@{
    Layout = "/Pages/Shared/_subLayout_Default.cshtml";

    ViewData["Title"] = "Home page";
    ViewData["DiscordChannel"] = "https://discord.gg/abcBNkDj";
    ViewData["library"] = "Testing";
    ViewData["subject"] = "Question";
    ViewData["section"] = "NewQuestion";

    ViewData["userid"] = "1";
    ViewData["Category"] = "1";

}


<div class="text-center">
    <h1>Connect with Peers</h1>
    <p class="text-center">Available Sources to Connecting with other who use this site.</p>
</div>

<div class="w100">

    <div class="box-row box-center0 ">

        <div class="box-col thumbnail-link" id="discord_channel" data-value="@ViewData["DiscordChannel"]">
            <a href="https://discord.com/" target="_blank">
                <img src="~/images/external/discord-mark-blue.png" alt="discord_thumbnail" class="thumbnail-img">
            </a>
            <button class="thumbnail-btn" onclick="copyToClipboard('discord_channel', this)">Copy Discord Link</button>
            <div class="thumbnail-text">Visit Discord</div>
        </div>
    </div>
</div>


@*https://www.learnrazorpages.com/razor-pages/partial-pages*@
<div class="mt-5">
    <h5 class="text-center">Database and Tools Test Area</h5>
    <div>
        <div>
            <a rel="nofollow noopener noreferrer" target="_blank" href="https://github.com/TAReber" class="gsc-comment-author-avatar">
                <img src="https://avatars.githubusercontent.com/u/94849230?u=20b482a08448becd69f0eaf3966f32accc46b178&amp;v=4" width="30" height="30" alt="" loading="lazy" class="mr-2 rounded-full">
                <span class="link-primary overflow-hidden text-ellipsis font-semibold">TAReber</span>
            </a>
            <time title="Jul 5, 2023, 7:12 PM CDT" datetime="2023-07-06T00:12:29Z" class="whitespace-nowrap">10 days ago</time>
        </div>

    </div>
</div>


@* Testing Section *@
<div class="accordion w100">

    <div class="accordion-item c-bg">

        <button class="accordion-toggle c-fg event-toggle" type="button" data-target="PostTypes">
            <h6>Testing Section 2</h6>
        </button>

        <div class="accordion-target-vertical box-col" id="PostTypes">

            @* todo: row of partial views called tabs *@
            <div class="box-col zero">
                <div class="box-row box-center3">

                    <div class="box-row zero">

                        @* enter all tabs here *@
                        <button>Article</button>
                        <button id="videobuttontest">Video</button>
                        <button>Stackoverflow</button>

                    </div>

                    <div class="box-row">

                            
                            <button type="submit" action="handler" value="Insert">Insert</button>
                            <button type="submit" action="handler" value="Edit">Edit</button>
                            <button type="submit" action="handler" value="Delete">Delete</button>

                    </div>
                    
                </div>
                <div class="box-col w100 zero section-viewport" id="viewport2" loading="lazy">
                </div>

            </div>

        </div>
    </div>
</div>

<div class="whitespace"></div>

<script>
    document.getElementById("videobuttontest").addEventListener("click", function () {
        console.log("Test");
        let url = "https://youtu.be/90MeC-PTj50"

        fetch("/api/librarylink/GetPreviewVideo", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                videolink: url
            })
        })
            .then(response => response.text())
            .then(data => {
                console.log(data);

                // let newdocument = document.implementation.createHTMLDocument();
                // newdocument.write(data);
                //document.getElementById("viewport2").innerHTML. = "<p>Test Content</P>";

                const main = document.getElementById("viewport2");
                const fragment = document.createDocumentFragment();
                const block = document.createElement("div");
                block.innerHTML = data;

                fragment.append(block);
                main.appendChild(fragment);


            });


        //document.getElementsByClassName("section-viewport")[0].src = "https://www.youtube.com/embed/6n3pFFPSlW4";
    });

    let expandedDescription = null;
    function ToggleDescription(description) {

        if (expandedDescription != null) {

            if (expandedDescription != description) {
                expandedDescription.classList.toggle('expanded');
                description.classList.toggle('expanded');
                expandedDescription = description;
            }
            else {
                description.classList.toggle('expanded');
                expandedDescription = null;
            }

        }
        else {
            description.classList.toggle('expanded');
            expandedDescription = description;
        }


    };


</script>