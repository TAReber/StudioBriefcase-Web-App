@page "{language?}"
@model StudioBriefcase.Pages.Library.Computer_Graphics.Vulkan.Vulkan_Overview.Layers_and_DebuggingModel
@{
    Layout = ViewData["Layout"]?.ToString();
}
<div class="text-center">
    <h2>Layers and Debugging</h2>
</div>

<div class="mt-5">
    <p>Vulkan is a very verbose API and if you have any hope of making anything, you’ll want to what went wrong and when.</p>
    <ul>
        <li>
            <vk><c-type>VkResult</c-type></vk> is an enumeration type returned by every method in Vulkan. The enumerations can be broken up into two categories: Successful codes and Error codes.
            <ul>
                <li>Success codes are return values that are greater or equal to zero.</li>
                <li>o	Error Codes are return values that are less than </li>
            </ul>
        </li>
        <li>
            <strong>Vulkan Validation Layers</strong>
            <ul>
                <li>Layers are components that can intercept, modify, extend the behavior of Vulkan API calls. They can be used to debug, profile or validate correct API usage.</li>
            </ul>
            <p>The Layers we will concern our selves with are validation layers. The official Vulkan SDK provides a set of validation layers we will use when learning Vulkan. These are optional and can be enabled or disabled in the <vk><c-type>VkInstanceCreateInfo</c-type></vk> structure.</p>
        </li>
    </ul>
    <p>
        Read about the Return Codes <a href="https://registry.khronos.org/vulkan/specs/1.3/html/chap3.html#fundamentals-returncodes">here</a>,
        We will make class that will parse the return codes. We will write a method that will output return codes to a file them to a file to give us more information about the problem.
    </p>
</div>

<div class="mt-5">
    <h5>More about Validation Layers to Come.</h5>
    <h6>Plans for the future</h6>
    <ul>
        <li>Show exmaples of validation layers you should see when you make an error.</li>
        <li>The layer messages are intimdating non-sense, and I want to show tips and trick to make sense of them.</li>

    </ul>
</div>